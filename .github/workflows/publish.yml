name: Publish ðŸ“¦

on:
  release:
    types: [created]

jobs:
  publish:
    name: ðŸ“¦ Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.15.0

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: cd packages/core && pnpm build

      - name: Test
        run: cd packages/core && pnpm test

      - name: Check package version
        run: |
          PKG_VERSION=$(node -p "require('./packages/core/package.json').version")
          RELEASE_VERSION=${GITHUB_REF#refs/tags/v}
          if [ "$PKG_VERSION" != "$RELEASE_VERSION" ]; then
            echo "Package version ($PKG_VERSION) does not match release version ($RELEASE_VERSION)"
            exit 1
          fi

      - name: Publish to npm
        run: cd packages/core && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true 